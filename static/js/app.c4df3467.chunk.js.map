{"version":3,"sources":["firebase.js","Components/Pages/Home.js","Components/Pages/Login.js","Components/Pages/SignUp.js","App.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Notifications","handleNotification","a","async","shouldShowAlert","shouldPlaySound","shouldSetBadge","Home","navigation","useState","phoneNumber","updatePhoneNumber","checkBoxStateQuote","updateCheckBoxStateQuote","setExpoPushToken","setNotification","notificationListener","useRef","responseListener","firebaseRef","database","ref","child","auth","currentUser","uid","useEffect","on","snapshot","snapshot_data","val","setUpExpoToken","Constants","isDevice","Permissions","existingStatus","status","finalStatus","alert","token","data","console","log","Platform","OS","name","importance","MAX","vibrationPattern","lightColor","registerForPushNotificationsAsync","then","update","ExpoPushToken","current","notification","response","View","style","styles","container","Text","placeholder","onChangeText","value","onPress","title","checked","signOut","catch","err","navigate","StatusBar","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","Login","password","updatePassword","email","updateEmail","message","setMessage","updateLoading","setVisible","onAuthStateChanged","user","secureTextEntry","signInWithEmailAndPassword","firebase_sign_in","once","error","String","provider","GoogleAuthProvider","signInWithPopup","firebase_sign_in_google","id","SignUp","createUserWithEmailAndPassword","firebase_sign_up","set","App","createAppContainer","createSwitchNavigator","screen","headerMode","cardStyle"],"mappings":"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","file":"static/js/app.c4df3467.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"@firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA8CayNjq_3waCPH533_Haij8scNzIM_H8\",\n  authDomain: \"evolve-6b9a3.firebaseapp.com\",\n  databaseURL: \"https://evolve-6b9a3.firebaseio.com\",\n  projectId: \"evolve-6b9a3\",\n  storageBucket: \"evolve-6b9a3.appspot.com\",\n  messagingSenderId: \"408948735077\",\n  appId: \"1:408948735077:web:11c577a47ef8c0acac5a8c\",\n  measurementId: \"G-S5DY8CVKB0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// firebase.auth().onAuthStateChanged(user => {\n//   if (user != null) {\n//     console.log(\"We are authenticated now!\");\n//   }\n//   console.log({ user });\n// });\n\nexport function firebase_sign_in_anonymous() {\n  return firebase\n    .auth()\n    .signInAnonymously()\n    .then(response => console.log({ response }))\n    .catch(error => console.log({ error }));\n}\n\nexport function firebase_sign_in_google() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  console.log({ provider });\n  return firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(response => response)\n    .catch(error => console.log({ error }));\n}\nexport function firebase_sign_up({ email, password }) {\n  return firebase.auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_in({ email, password }) {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_out() {\n  return firebase\n    .auth()\n    .signOut()\n    .then(response => {\n      console.log({ response });\n    })\n    .catch(err => {\n      console.log({ err });\n    });\n}\n\nexport { firebase };\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect, Fragment, useRef } from \"react\";\nimport Constants from \"expo-constants\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { StyleSheet, Text, View, Platform } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input, CheckBox } from \"react-native-elements\";\nimport { firebase, firebase_sign_out } from \"../../firebase\";\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false\n  })\n});\nfunction Home({ navigation }) {\n  const [phoneNumber, updatePhoneNumber] = useState(\"\");\n  const [checkBoxStateQuote, updateCheckBoxStateQuote] = useState(false);\n\n  const [expoPushToken, setExpoPushToken] = useState(\"\");\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  const firebaseRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(firebase.auth().currentUser.uid);\n\n  useEffect(() => {\n    firebaseRef.on(\"value\", snapshot => {\n      const snapshot_data = snapshot.val();\n      const phoneNumber = snapshot_data[\"phoneNumber\"] || \"\";\n      updateCheckBoxStateQuote(snapshot_data[\"checkBoxStateQuote\"] || false);\n      updatePhoneNumber(phoneNumber);\n    });\n  }, []);\n\n  const onSignOut = () => {\n    firebase_sign_out().then(response => {\n      navigation.navigate(\"Login\");\n    });\n  };\n\n  const onSubmit = () => {\n    firebaseRef.update({ phoneNumber: phoneNumber });\n  };\n\n  const setUpExpoToken = () => {\n    registerForPushNotificationsAsync().then(token => {\n      setExpoPushToken(token);\n      firebaseRef.update({ ExpoPushToken: token });\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n      setNotification(notification);\n    });\n\n    // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log(response);\n    });\n\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  };\n\n  useEffect(() => {\n    if (Platform.OS != \"web\") {\n      return setUpExpoToken();\n    }\n  }, []);\n  return (\n    <View style={styles.container}>\n      <Text>Enter Your Phone Number to Receive Bot Alerts</Text>\n      <Input placeholder=\"Phone Number\" onChangeText={updatePhoneNumber} value={phoneNumber} />\n      <Button onPress={onSubmit} title=\"Submit\" />\n      <CheckBox\n        title=\"Quote Bot\"\n        checked={checkBoxStateQuote}\n        onPress={() => {\n          firebaseRef.update({ checkBoxStateQuote: !checkBoxStateQuote });\n          updateCheckBoxStateQuote(!checkBoxStateQuote);\n        }}\n      />\n      <Button onPress={onSignOut} title=\"Sign Out\" />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\nasync function registerForPushNotificationsAsync() {\n  let token;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      alert(\"Failed to get push token for push notification!\");\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    //alert(\"Must use physical device for Push Notifications\");\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\"\n    });\n  }\n\n  return token;\n}\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, SafeAreaView, Text, Platform } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction Login({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user != null) {\n        navigation.navigate(\"Home\");\n        console.log(\"We are authenticated now!\");\n      }\n      console.log({ user });\n    });\n  }, []);\n\n  const onLoginSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_in({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n\n          firebase\n            .database()\n            .ref(\"users\")\n            .child(uid)\n            .once(\"value\")\n            .then(snapshot => {\n              const user = snapshot.val();\n              console.log({ user });\n              navigation.navigate(\"Home\", { user: user });\n            });\n        })\n        .catch(error => {\n          updateLoading(false);\n          setMessage(String(error));\n          setVisible(1);\n        });\n    }\n  };\n\n  const onGoogleSubmit = () => {\n    firebase_sign_in_google().then(response => {\n      const uid = response.user.uid;\n      const email = response.user.email;\n\n      const data = {\n        id: uid,\n        email: email\n      };\n\n      const firebaseRef = firebase.database().ref(\"users\");\n      firebaseRef\n        .child(uid)\n        .update(data)\n        .then(() => {\n          navigation.navigate(\"Home\", { user: data });\n        })\n        .catch(error => {\n          alert(error);\n        });\n    });\n  };\n\n  const onSignUpSubmit = () => {\n    navigation.navigate(\"SignUp\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onLoginSubmit} title=\"Login\" />\n      {Platform.OS == \"web\" ? <Button onPress={onGoogleSubmit} title=\"Google\" /> : null}\n      <Button onPress={onSignUpSubmit} title=\"SignUp\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, SafeAreaView } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction SignUp({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n\n  const onSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_up({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n          const data = {\n            id: uid,\n            email\n          };\n\n          const firebaseRef = firebase.database().ref(\"users\");\n          firebaseRef\n            .child(uid)\n            .set(data)\n            .then(() => {\n              navigation.navigate(\"Home\", { user: data });\n            })\n            .catch(error => {\n              alert(error);\n            });\n          // const usersRef = firebase.firestore().collection(\"users\");\n          // usersRef\n          //   .doc(uid)\n          //   .set(data)\n          //   .then(() => {\n          //     navigation.navigate(\"Home\", { user: data });\n          //   })\n          //   .catch(error => {\n          //     alert(error);\n          //   });\n        })\n        .catch(error => {\n          updateLoading(false);\n          console.log({ error });\n          setMessage(String(error));\n\n          setVisible(1);\n        });\n    }\n  };\n\n  const onLoginNavigate = () => {\n    navigation.navigate(\"Login\");\n  };\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onSubmit} title=\"Sign Up\" />\n      <Button onPress={onLoginNavigate} title=\"Back\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\n\nimport Home from \"./Components/Pages/Home\";\nimport Login from \"./Components/Pages/Login\";\nimport SignUp from \"./Components/Pages/SignUp\";\n\nconst StackNavigatorOptions = {\n  headerMode: \"none\",\n  cardStyle: {\n    backgroundColor: \"white\"\n  }\n};\n\nconst App = createAppContainer(\n  createSwitchNavigator(\n    {\n      Login: { screen: Login },\n      Home: { screen: Home },\n      SignUp: { screen: SignUp }\n    },\n    StackNavigatorOptions\n  )\n);\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n"],"sourceRoot":""}