{"version":3,"sources":["firebase.js","Components/Pages/Home.js","Components/Pages/Login.js","Components/Pages/SignUp.js","App.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onAuthStateChanged","user","console","log","Home","navigation","useState","phoneNumber","updatePhoneNumber","userDict","updateUserDict","firebaseRef","database","ref","child","auth","currentUser","uid","useEffect","on","snapshot","snapshot_data","val","View","style","styles","container","Text","placeholder","onChangeText","value","onPress","set","title","signOut","then","response","catch","err","navigate","StatusBar","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","Login","password","updatePassword","email","updateEmail","message","setMessage","updateLoading","setVisible","secureTextEntry","signInWithEmailAndPassword","firebase_sign_in","once","error","String","provider","GoogleAuthProvider","signInWithPopup","firebase_sign_in_google","SignUp","createUserWithEmailAndPassword","firebase_sign_up","data","id","alert","App","createAppContainer","createSwitchNavigator","screen","headerMode","cardStyle"],"mappings":"ixBAgBAA,gBAXqB,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjBR,SAAgBS,oBAAmB,SAAAC,GACrB,MAARA,GACFC,QAAQC,IAAI,6BAEdD,QAAQC,IAAI,CAAEF,YCuBDG,MAvCf,YAA+B,IAAfC,EAAc,EAAdA,WAAc,EACaC,mBAAS,IADtB,WACrBC,EADqB,KACRC,EADQ,OAEOF,mBAAS,IAFhB,WAErBG,EAFqB,KAEXC,EAFW,KAItBC,EAAcpB,EACjBqB,WACAC,IAAI,SACJC,MAAMvB,EAASwB,OAAOC,YAAYC,KAqBrC,OAnBAC,qBAAU,WACRP,EAAYQ,GAAG,SAAS,SAAAC,GACtB,IAAMC,EAAgBD,EAASE,MACzBf,EAAcc,EAAa,aAAmB,GACpDX,EAAeW,GACfb,EAAkBD,QAEnB,IAaD,kBAACgB,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAACC,EAAA,EAAD,sDACA,kBAAC,IAAD,CAAOC,YAAY,eAAeC,aAAcrB,EAAmBsB,MAAOvB,IAC1E,kBAAC,IAAD,CAAQwB,QARK,WACfpB,EAAYqB,IAAZ,OAAqBvB,GAArB,IAA+BF,YAAaA,MAOf0B,MAAM,WACjC,kBAAC,IAAD,CAAQF,QAfM,WD2BXxC,SAEJ2C,UACAC,MAAK,SAAAC,GACJlC,QAAQC,IAAI,CAAEiC,gBAEfC,OAAM,SAAAC,GACLpC,QAAQC,IAAI,CAAEmC,WCjCIH,MAAK,SAAAC,GACvB/B,EAAWkC,SAAS,aAaQN,MAAM,aAClC,kBAACO,EAAA,EAAD,CAAWhB,MAAM,WAOjBC,EAASgB,IAAWC,OAAO,CAC/BhB,UAAW,CACTiB,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,YCqBLC,MA5Df,YAAgC,IAAf1C,EAAc,EAAdA,WAAc,EACMC,mBAAS,IADf,WACtB0C,EADsB,KACZC,EADY,OAEA3C,mBAAS,IAFT,WAEtB4C,EAFsB,KAEfC,EAFe,OAGC7C,mBAAS,IAHV,WAGtB8C,EAHsB,KAGbC,EAHa,OAII/C,oBAAS,GAJb,WAIbgD,GAJa,aAKChD,mBAAS,GALV,WAKbiD,GALa,WAgD7B,OACE,kBAAChC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAAC,IAAD,CAAOE,YAAY,QAAQC,aAAcsB,EAAarB,MAAOoB,IAC7D,kBAAC,IAAD,CAAOtB,YAAY,WAAW4B,iBAAiB,EAAM3B,aAAcoB,EAAgBnB,MAAOkB,IAC1F,kBAAC,IAAD,CAAQjB,QA7CU,WACN,KAAVmB,GACFG,EAAW,yBACXE,EAAW,IACW,KAAbP,GACTK,EAAW,4BACXE,EAAW,KAEXD,GAAc,GFkBb,YAAgD,IAApBJ,EAAmB,EAAnBA,MAAOF,EAAY,EAAZA,SACxC,OAAOzD,SAAgBkE,2BAA2BP,EAAOF,GElBrDU,CAAiB,CAAER,QAAOF,aACvBb,MAAK,SAAAC,GACJ,IAAMnB,EAAMmB,EAASnC,KAAKgB,IAE1B1B,EACGqB,WACAC,IAAI,SACJC,MAAMG,GACN0C,KAAK,SACLxB,MAAK,SAAAf,GACJ,IAAMnB,EAAOmB,EAASE,MACtBpB,QAAQC,IAAI,CAAEF,SACdI,EAAWkC,SAAS,OAAQ,CAAEtC,KAAMA,UAGzCoC,OAAM,SAAAuB,GACLN,GAAc,GACdD,EAAWQ,OAAOD,IAClBL,EAAW,QAkBiBtB,MAAM,UACtC,kBAAC,IAAD,CAAQF,QAdW,YFnBlB,WACL,IAAI+B,EAAW,IAAIvE,OAAcwE,mBAEjC,OADA7D,QAAQC,IAAI,CAAE2D,aACPvE,SAEJyE,gBAAgBF,GAChB3B,MAAK,SAAAC,GAAQ,OAAIlC,QAAQC,IAAI,CAAEiC,gBAC/BC,OAAM,SAAAuB,GAAK,OAAI1D,QAAQC,IAAI,CAAEyD,cEa9BK,GAA0B9B,MAAK,SAAAC,GAC7BlC,QAAQC,IAAI,CAAEiC,iBAYmBH,MAAM,WACvC,kBAAC,IAAD,CAAQF,QATW,WACrB1B,EAAWkC,SAAS,WAQeN,MAAM,WACvC,kBAACN,EAAA,EAAD,KAAOyB,KAOP3B,EAASgB,IAAWC,OAAO,CAC/BhB,UAAW,CACTiB,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,YCELoB,MArEf,YAAiC,IAAf7D,EAAc,EAAdA,WAAc,EACKC,mBAAS,IADd,WACvB0C,EADuB,KACbC,EADa,OAED3C,mBAAS,IAFR,WAEvB4C,EAFuB,KAEhBC,EAFgB,OAGA7C,mBAAS,IAHT,WAGvB8C,EAHuB,KAGdC,EAHc,OAIG/C,oBAAS,GAJZ,WAIdgD,GAJc,aAKAhD,mBAAS,GALT,WAKdiD,GALc,WA0D9B,OACE,kBAAChC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAAC,IAAD,CAAOE,YAAY,QAAQC,aAAcsB,EAAarB,MAAOoB,IAC7D,kBAAC,IAAD,CAAOtB,YAAY,WAAW4B,iBAAiB,EAAM3B,aAAcoB,EAAgBnB,MAAOkB,IAC1F,kBAAC,IAAD,CAAQjB,QAvDK,WACD,KAAVmB,GACFG,EAAW,yBACXE,EAAW,IACW,KAAbP,GACTK,EAAW,4BACXE,EAAW,KAEXD,GAAc,GHcb,YAAgD,IAApBJ,EAAmB,EAAnBA,MAAOF,EAAY,EAAZA,SACxC,OAAOzD,SAAgB4E,+BAA+BjB,EAAOF,GGdzDoB,CAAiB,CAAElB,QAAOF,aACvBb,MAAK,SAAAC,GACJ,IAAMnB,EAAMmB,EAASnC,KAAKgB,IACpBoD,EAAO,CACXC,GAAIrD,EACJiC,SAGkB3D,EAASqB,WAAWC,IAAI,SAEzCC,MAAMG,GACNe,IAAIqC,GACJlC,MAAK,WACJ9B,EAAWkC,SAAS,OAAQ,CAAEtC,KAAMoE,OAErChC,OAAM,SAAAuB,GACLW,MAAMX,SAaXvB,OAAM,SAAAuB,GACLN,GAAc,GACdpD,QAAQC,IAAI,CAAEyD,UACdP,EAAWQ,OAAOD,IAElBL,EAAW,QAYYtB,MAAM,YACjC,kBAAC,IAAD,CAAQF,QARY,WACtB1B,EAAWkC,SAAS,UAOgBN,MAAM,SACxC,kBAACN,EAAA,EAAD,KAAOyB,KAOP3B,EAASgB,IAAWC,OAAO,CAC/BhB,UAAW,CACTiB,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,YCzEd0B,EAAMC,6BACVC,gCACE,CACE3B,MAAO,CAAE4B,OAAQ5B,GACjB3C,KAAM,CAAEuE,OAAQvE,GAChB8D,OAAQ,CAAES,OAAQT,IAZM,CAC5BU,WAAY,OACZC,UAAW,CACTjC,gBAAiB,YAeN4B,MAEA/B,IAAWC,OAAO,CAC/BhB,UAAW,CACTiB,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,a","file":"static/js/app.a11886b8.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"@firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA8CayNjq_3waCPH533_Haij8scNzIM_H8\",\n  authDomain: \"evolve-6b9a3.firebaseapp.com\",\n  databaseURL: \"https://evolve-6b9a3.firebaseio.com\",\n  projectId: \"evolve-6b9a3\",\n  storageBucket: \"evolve-6b9a3.appspot.com\",\n  messagingSenderId: \"408948735077\",\n  appId: \"1:408948735077:web:11c577a47ef8c0acac5a8c\",\n  measurementId: \"G-S5DY8CVKB0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfirebase.auth().onAuthStateChanged(user => {\n  if (user != null) {\n    console.log(\"We are authenticated now!\");\n  }\n  console.log({ user });\n});\n\nexport function firebase_sign_in_anonymous() {\n  return firebase\n    .auth()\n    .signInAnonymously()\n    .then(response => console.log({ response }))\n    .catch(error => console.log({ error }));\n}\n\nexport function firebase_sign_in_google() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  console.log({ provider });\n  return firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(response => console.log({ response }))\n    .catch(error => console.log({ error }));\n}\nexport function firebase_sign_up({ email, password }) {\n  return firebase.auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_in({ email, password }) {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_out() {\n  return firebase\n    .auth()\n    .signOut()\n    .then(response => {\n      console.log({ response });\n    })\n    .catch(err => {\n      console.log({ err });\n    });\n}\n\nexport { firebase };\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport { firebase, firebase_sign_out } from \"../../firebase\";\n\nfunction Home({ navigation }) {\n  const [phoneNumber, updatePhoneNumber] = useState(\"\");\n  const [userDict, updateUserDict] = useState({});\n\n  const firebaseRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(firebase.auth().currentUser.uid);\n\n  useEffect(() => {\n    firebaseRef.on(\"value\", snapshot => {\n      const snapshot_data = snapshot.val();\n      const phoneNumber = snapshot_data[\"phoneNumber\"] || \"\";\n      updateUserDict(snapshot_data);\n      updatePhoneNumber(phoneNumber);\n    });\n  }, []);\n\n  const onSignOut = () => {\n    firebase_sign_out().then(response => {\n      navigation.navigate(\"Login\");\n    });\n  };\n\n  const onSubmit = () => {\n    firebaseRef.set({ ...userDict, phoneNumber: phoneNumber });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Enter Your Phone Number to Receive Bot Alerts</Text>\n      <Input placeholder=\"Phone Number\" onChangeText={updatePhoneNumber} value={phoneNumber} />\n      <Button onPress={onSubmit} title=\"Submit\" />\n      <Button onPress={onSignOut} title=\"Sign Out\" />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, View, SafeAreaView, Text } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction Login({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n\n  const onLoginSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_in({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n\n          firebase\n            .database()\n            .ref(\"users\")\n            .child(uid)\n            .once(\"value\")\n            .then(snapshot => {\n              const user = snapshot.val();\n              console.log({ user });\n              navigation.navigate(\"Home\", { user: user });\n            });\n        })\n        .catch(error => {\n          updateLoading(false);\n          setMessage(String(error));\n          setVisible(1);\n        });\n    }\n  };\n\n  const onGoogleSubmit = () => {\n    firebase_sign_in_google().then(response => {\n      console.log({ response });\n    });\n  };\n\n  const onSignUpSubmit = () => {\n    navigation.navigate(\"SignUp\");\n  };\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onLoginSubmit} title=\"Login\" />\n      <Button onPress={onGoogleSubmit} title=\"Google\" />\n      <Button onPress={onSignUpSubmit} title=\"SignUp\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, SafeAreaView } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction SignUp({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n\n  const onSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_up({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n          const data = {\n            id: uid,\n            email\n          };\n\n          const firebaseRef = firebase.database().ref(\"users\");\n          firebaseRef\n            .child(uid)\n            .set(data)\n            .then(() => {\n              navigation.navigate(\"Home\", { user: data });\n            })\n            .catch(error => {\n              alert(error);\n            });\n          // const usersRef = firebase.firestore().collection(\"users\");\n          // usersRef\n          //   .doc(uid)\n          //   .set(data)\n          //   .then(() => {\n          //     navigation.navigate(\"Home\", { user: data });\n          //   })\n          //   .catch(error => {\n          //     alert(error);\n          //   });\n        })\n        .catch(error => {\n          updateLoading(false);\n          console.log({ error });\n          setMessage(String(error));\n\n          setVisible(1);\n        });\n    }\n  };\n\n  const onLoginNavigate = () => {\n    navigation.navigate(\"Login\");\n  };\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onSubmit} title=\"Sign Up\" />\n      <Button onPress={onLoginNavigate} title=\"Back\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\n\nimport Home from \"./Components/Pages/Home\";\nimport Login from \"./Components/Pages/Login\";\nimport SignUp from \"./Components/Pages/SignUp\";\n\nconst StackNavigatorOptions = {\n  headerMode: \"none\",\n  cardStyle: {\n    backgroundColor: \"white\"\n  }\n};\n\nconst App = createAppContainer(\n  createSwitchNavigator(\n    {\n      Login: { screen: Login },\n      Home: { screen: Home },\n      SignUp: { screen: SignUp }\n    },\n    StackNavigatorOptions\n  )\n);\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n"],"sourceRoot":""}