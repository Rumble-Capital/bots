{"version":3,"sources":["firebase.js","Components/Pages/Home.js","Components/Pages/Login.js","Components/Pages/SignUp.js","App.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onAuthStateChanged","user","console","log","Home","navigation","useState","phoneNumber","updatePhoneNumber","firebaseRef","database","ref","child","auth","currentUser","uid","useEffect","on","snapshot","val","View","style","styles","container","Text","placeholder","onChangeText","value","onPress","update","title","signOut","then","response","catch","err","navigate","StatusBar","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","Login","password","updatePassword","email","updateEmail","message","setMessage","updateLoading","setVisible","secureTextEntry","signInWithEmailAndPassword","firebase_sign_in","once","error","String","Platform","OS","provider","GoogleAuthProvider","signInWithPopup","firebase_sign_in_google","data","id","alert","SignUp","createUserWithEmailAndPassword","firebase_sign_up","set","App","createAppContainer","createSwitchNavigator","screen","headerMode","cardStyle"],"mappings":"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","file":"static/js/app.d3deb19e.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"@firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA8CayNjq_3waCPH533_Haij8scNzIM_H8\",\n  authDomain: \"evolve-6b9a3.firebaseapp.com\",\n  databaseURL: \"https://evolve-6b9a3.firebaseio.com\",\n  projectId: \"evolve-6b9a3\",\n  storageBucket: \"evolve-6b9a3.appspot.com\",\n  messagingSenderId: \"408948735077\",\n  appId: \"1:408948735077:web:11c577a47ef8c0acac5a8c\",\n  measurementId: \"G-S5DY8CVKB0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfirebase.auth().onAuthStateChanged(user => {\n  if (user != null) {\n    console.log(\"We are authenticated now!\");\n  }\n  console.log({ user });\n});\n\nexport function firebase_sign_in_anonymous() {\n  return firebase\n    .auth()\n    .signInAnonymously()\n    .then(response => console.log({ response }))\n    .catch(error => console.log({ error }));\n}\n\nexport function firebase_sign_in_google() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  console.log({ provider });\n  return firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(response => response)\n    .catch(error => console.log({ error }));\n}\nexport function firebase_sign_up({ email, password }) {\n  return firebase.auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_in({ email, password }) {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_out() {\n  return firebase\n    .auth()\n    .signOut()\n    .then(response => {\n      console.log({ response });\n    })\n    .catch(err => {\n      console.log({ err });\n    });\n}\n\nexport { firebase };\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport { firebase, firebase_sign_out } from \"../../firebase\";\n\nfunction Home({ navigation }) {\n  const [phoneNumber, updatePhoneNumber] = useState(\"\");\n\n  const firebaseRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(firebase.auth().currentUser.uid);\n\n  useEffect(() => {\n    firebaseRef.on(\"value\", snapshot => {\n      const snapshot_data = snapshot.val();\n      const phoneNumber = snapshot_data[\"phoneNumber\"] || \"\";\n      updatePhoneNumber(phoneNumber);\n    });\n  }, []);\n\n  const onSignOut = () => {\n    firebase_sign_out().then(response => {\n      navigation.navigate(\"Login\");\n    });\n  };\n\n  const onSubmit = () => {\n    firebaseRef.update({ phoneNumber: phoneNumber });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Enter Your Phone Number to Receive Bot Alerts</Text>\n      <Input placeholder=\"Phone Number\" onChangeText={updatePhoneNumber} value={phoneNumber} />\n      <Button onPress={onSubmit} title=\"Submit\" />\n      <Button onPress={onSignOut} title=\"Sign Out\" />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, View, SafeAreaView, Text, Platform } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction Login({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n  const onLoginSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_in({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n\n          firebase\n            .database()\n            .ref(\"users\")\n            .child(uid)\n            .once(\"value\")\n            .then(snapshot => {\n              const user = snapshot.val();\n              console.log({ user });\n              navigation.navigate(\"Home\", { user: user });\n            });\n        })\n        .catch(error => {\n          updateLoading(false);\n          setMessage(String(error));\n          setVisible(1);\n        });\n    }\n  };\n\n  const onGoogleSubmit = () => {\n    firebase_sign_in_google().then(response => {\n      const uid = response.user.uid;\n      const email = response.user.email;\n\n      const data = {\n        id: uid,\n        email: email\n      };\n\n      const firebaseRef = firebase.database().ref(\"users\");\n      firebaseRef\n        .child(uid)\n        .update(data)\n        .then(() => {\n          navigation.navigate(\"Home\", { user: data });\n        })\n        .catch(error => {\n          alert(error);\n        });\n    });\n  };\n\n  const onSignUpSubmit = () => {\n    navigation.navigate(\"SignUp\");\n  };\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onLoginSubmit} title=\"Login\" />\n      {Platform.OS == \"web\" ? <Button onPress={onGoogleSubmit} title=\"Google\" /> : null}\n      <Button onPress={onSignUpSubmit} title=\"SignUp\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, SafeAreaView } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction SignUp({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n\n  const onSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_up({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n          const data = {\n            id: uid,\n            email\n          };\n\n          const firebaseRef = firebase.database().ref(\"users\");\n          firebaseRef\n            .child(uid)\n            .set(data)\n            .then(() => {\n              navigation.navigate(\"Home\", { user: data });\n            })\n            .catch(error => {\n              alert(error);\n            });\n          // const usersRef = firebase.firestore().collection(\"users\");\n          // usersRef\n          //   .doc(uid)\n          //   .set(data)\n          //   .then(() => {\n          //     navigation.navigate(\"Home\", { user: data });\n          //   })\n          //   .catch(error => {\n          //     alert(error);\n          //   });\n        })\n        .catch(error => {\n          updateLoading(false);\n          console.log({ error });\n          setMessage(String(error));\n\n          setVisible(1);\n        });\n    }\n  };\n\n  const onLoginNavigate = () => {\n    navigation.navigate(\"Login\");\n  };\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onSubmit} title=\"Sign Up\" />\n      <Button onPress={onLoginNavigate} title=\"Back\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\n\nimport Home from \"./Components/Pages/Home\";\nimport Login from \"./Components/Pages/Login\";\nimport SignUp from \"./Components/Pages/SignUp\";\n\nconst StackNavigatorOptions = {\n  headerMode: \"none\",\n  cardStyle: {\n    backgroundColor: \"white\"\n  }\n};\n\nconst App = createAppContainer(\n  createSwitchNavigator(\n    {\n      Login: { screen: Login },\n      Home: { screen: Home },\n      SignUp: { screen: SignUp }\n    },\n    StackNavigatorOptions\n  )\n);\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n"],"sourceRoot":""}