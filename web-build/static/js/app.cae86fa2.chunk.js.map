{"version":3,"sources":["firebase.js","Components/Pages/Home.js","Components/Pages/Login.js","Components/Pages/SignUp.js","App.js"],"names":["document_data_from_snapshot","snapshot","docs","map","document","id","data","firestore_load","documents","setDocuments","collection_name","uid","firebase","collection","where","firebase_collection_define","onSnapshot","downloadedDocuments","JSON","stringify","document_state_update_if_change","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onAuthStateChanged","user","console","log","useFirestore","useState","users","updateUsers","useEffect","setUser","update_dict","doc","set","then","catch","err","set_firebase_firestore","deleteUser","delete","delete_firebase_firestore","Home","navigation","updateUID","auth","currentUser","phoneNumber","updatePhoneNumber","navigate","get_uid_or_go_home","updatePhoneNumberLoad","length","View","style","styles","container","Text","placeholder","onChangeText","value","onPress","base_dict","title","signOut","response","StatusBar","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","Login","password","updatePassword","email","updateEmail","message","setMessage","updateLoading","setVisible","secureTextEntry","signInWithEmailAndPassword","firebase_sign_in","firestore","get","firestoreDocument","exists","alert","error","String","provider","GoogleAuthProvider","signInWithPopup","firebase_sign_in_google","SignUp","createUserWithEmailAndPassword","firebase_sign_up","App","createAppContainer","createSwitchNavigator","screen","headerMode","cardStyle"],"mappings":"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","file":"static/js/app.cae86fa2.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"@firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA8CayNjq_3waCPH533_Haij8scNzIM_H8\",\n  authDomain: \"evolve-6b9a3.firebaseapp.com\",\n  databaseURL: \"https://evolve-6b9a3.firebaseio.com\",\n  projectId: \"evolve-6b9a3\",\n  storageBucket: \"evolve-6b9a3.appspot.com\",\n  messagingSenderId: \"408948735077\",\n  appId: \"1:408948735077:web:11c577a47ef8c0acac5a8c\",\n  measurementId: \"G-S5DY8CVKB0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfirebase.auth().onAuthStateChanged(user => {\n  if (user != null) {\n    console.log(\"We are authenticated now!\");\n  }\n  console.log({ user });\n});\n\nexport function firebase_sign_in_anonymous() {\n  return firebase\n    .auth()\n    .signInAnonymously()\n    .then(response => console.log({ response }))\n    .catch(error => console.log({ error }));\n}\n\nexport function firebase_sign_in_google() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  console.log({ provider });\n  return firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(response => console.log({ response }))\n    .catch(error => console.log({ error }));\n}\nexport function firebase_sign_up({ email, password }) {\n  return firebase.auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_in({ email, password }) {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function firebase_sign_out() {\n  return firebase\n    .auth()\n    .signOut()\n    .then(response => {\n      console.log({ response });\n    })\n    .catch(err => {\n      console.log({ err });\n    });\n}\n\nfunction document_data_from_snapshot(snapshot) {\n  const downloadedDocuments = snapshot.docs.map(document => ({ id: document.id, ...document.data() }));\n  return downloadedDocuments;\n}\n\nfunction document_state_update_if_change({ documents, downloadedDocuments, setDocuments }) {\n  if (JSON.stringify(documents) != JSON.stringify(downloadedDocuments)) {\n    setDocuments(downloadedDocuments);\n  }\n}\nfunction firebase_collection_define(collection_name, uid) {\n  let unsubscribe = firebase\n    .firestore()\n    .collection(collection_name)\n    .where(\"id\", \"==\", uid || \"\");\n  return unsubscribe;\n}\n\nfunction firestore_load({ documents, setDocuments, collection_name, uid }) {\n  let unsubscribe = firebase_collection_define(collection_name, uid);\n  unsubscribe.onSnapshot(snapshot => {\n    const downloadedDocuments = document_data_from_snapshot(snapshot);\n    document_state_update_if_change({ documents, downloadedDocuments, setDocuments });\n  });\n  //return () => unsubscribe();\n}\n\nfunction delete_firebase_firestore({ id, collection_name }) {\n  return firebase\n    .firestore()\n    .collection(collection_name)\n    .doc(id)\n    .delete()\n    .then(() => {\n      console.log(\"deleted\");\n    })\n    .catch(err => {});\n}\n\nfunction set_firebase_firestore({ update_dict, id, collection_name }) {\n  return firebase\n    .firestore()\n    .collection(collection_name)\n    .doc(id)\n    .set(update_dict)\n    .then(() => {\n      console.log(\"success\");\n    })\n    .catch(err => {});\n}\n\nexport const useFirestore = ({ uid }) => {\n  const [users, updateUsers] = useState([]);\n\n  function setUser(update_dict) {\n    set_firebase_firestore({ update_dict, id: uid, collection_name: \"users\" });\n  }\n\n  function deleteUser({ id }) {\n    delete_firebase_firestore({ id, collection_name: \"users\" });\n  }\n  useEffect(() => {\n    return firestore_load({ documents: users, setDocuments: updateUsers, collection_name: \"users\", uid });\n  }, [uid]);\n\n  return { users, setUser, deleteUser };\n};\n\nexport { firebase };\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google,\n  useFirestore\n} from \"../../firebase\";\n\nfunction Home({ navigation }) {\n  const [uid, updateUID] = useState(\"\");\n  const { users, setUser, deleteUser } = useFirestore({ uid: firebase.auth().currentUser.uid });\n  const [phoneNumber, updatePhoneNumber] = useState(\"\");\n\n  // navigation.getParam(\"email\");\n  const get_uid_or_go_home = () => {\n    try {\n      const uid = firebase.auth().currentUser.uid;\n      console.log({ uid, users });\n      updateUID(uid);\n    } catch (err) {\n      console.log({ err });\n      navigation.navigate(\"Login\");\n    }\n  };\n\n  const updatePhoneNumberLoad = () => {\n    try {\n      updatePhoneNumber(users[0][\"phoneNumber\"]);\n    } catch (err) {\n      console.log({ err });\n      updatePhoneNumber(\"\");\n    }\n  };\n\n  useEffect(() => {\n    get_uid_or_go_home();\n    updatePhoneNumberLoad();\n  }, [uid, users.length]);\n\n  const onSignOut = () => {\n    firebase_sign_out().then(response => {\n      console.log({ response });\n      navigation.navigate(\"Login\");\n    });\n  };\n\n  const onSubmit = () => {\n    const base_dict = users[0];\n    setUser({ ...base_dict, phoneNumber: phoneNumber });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Home</Text>\n      <Input placeholder=\"Phone Number\" onChangeText={updatePhoneNumber} value={phoneNumber} />\n      <Button onPress={onSubmit} title=\"Submit\" />\n\n      <Button onPress={onSignOut} title=\"Sign Out\" />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, View, SafeAreaView, Text } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction Login({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n\n  const onLoginSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_in({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n          const usersRef = firebase.firestore().collection(\"users\");\n          usersRef\n            .doc(uid)\n            .get()\n            .then(firestoreDocument => {\n              if (!firestoreDocument.exists) {\n                alert(\"User does not exist anymore.\");\n                return;\n              }\n              const user = firestoreDocument.data();\n              console.log({ user });\n              navigation.navigate(\"Home\", { user: user });\n            })\n            .catch(error => {\n              alert(error);\n            });\n        })\n        .catch(error => {\n          updateLoading(false);\n          setMessage(String(error));\n          setVisible(1);\n        });\n    }\n  };\n\n  const onGoogleSubmit = () => {\n    firebase_sign_in_google().then(response => {\n      console.log({ response });\n    });\n  };\n\n  const onSignUpSubmit = () => {\n    navigation.navigate(\"SignUp\");\n  };\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onLoginSubmit} title=\"Login\" />\n      <Button onPress={onGoogleSubmit} title=\"Google\" />\n      <Button onPress={onSignUpSubmit} title=\"SignUp\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, SafeAreaView } from \"react-native\";\nimport { Button, ThemeProvider, Header, Input } from \"react-native-elements\";\nimport {\n  firebase,\n  firebase_sign_in_anonymous,\n  firebase_sign_up,\n  firebase_sign_in,\n  firebase_sign_out,\n  firebase_sign_in_google\n} from \"../../firebase\";\n\nfunction SignUp({ navigation }) {\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, updateLoading] = useState(false);\n  const [visible, setVisible] = useState(0);\n\n  const onSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_up({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n          const data = {\n            id: uid,\n            email\n          };\n          const usersRef = firebase.firestore().collection(\"users\");\n          usersRef\n            .doc(uid)\n            .set(data)\n            .then(() => {\n              navigation.navigate(\"Home\", { user: data });\n            })\n            .catch(error => {\n              alert(error);\n            });\n        })\n        .catch(error => {\n          updateLoading(false);\n          console.log({ error });\n          setMessage(String(error));\n\n          setVisible(1);\n        });\n    }\n  };\n\n  const onLoginNavigate = () => {\n    navigation.navigate(\"Login\");\n  };\n  return (\n    <View style={styles.container}>\n      <Input placeholder=\"Email\" onChangeText={updateEmail} value={email} />\n      <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={updatePassword} value={password} />\n      <Button onPress={onSubmit} title=\"Sign Up\" />\n      <Button onPress={onLoginNavigate} title=\"Back\" />\n      <Text>{message}</Text>\n    </View>\n  );\n}\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\n\nimport Home from \"./Components/Pages/Home\";\nimport Login from \"./Components/Pages/Login\";\nimport SignUp from \"./Components/Pages/SignUp\";\n\nconst StackNavigatorOptions = {\n  headerMode: \"none\",\n  cardStyle: {\n    backgroundColor: \"white\"\n  }\n};\n\nconst App = createAppContainer(\n  createSwitchNavigator(\n    {\n      Login: { screen: Login },\n      Home: { screen: Home },\n      SignUp: { screen: SignUp }\n    },\n    StackNavigatorOptions\n  )\n);\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n"],"sourceRoot":""}